<?php

$command = array_slice($argv, 1);

function separator(string $string) {
    return str_replace('/', DIRECTORY_SEPARATOR, $string);
}

function execute(string $command) {
    echo shell_exec(separator($command));
}

function save($directory, $content) {
    file_put_contents(separator($directory), $content);
}

function entity(string $Entity)
{
    save("src/Entity/{$Entity}.php", <<<END
<?php

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\Collection;

use Cajudev\Rest\Annotations\Query;
use Cajudev\Rest\Annotations\Payload;

/**
 * @ORM\Entity(repositoryClass="App\\Repository\\$Entity")
 */
class $Entity extends \Cajudev\Rest\Entity
{
    /**
     * @Payload
     * 
     * @Query(sortable=true, searchable=true)
     * 
     * @ORM\Column(type="string", nullable=false)
     */
    private string \$foo;
}
END);
}

function repository(string $Repository)
{
    save("src/Repository/{$Repository}.php", <<<END
<?php

namespace App\Repository;

class $Repository extends \Cajudev\Rest\Repository
{
}    
END);
}

function service(string $Service)
{
    save("src/Services/{$Service}.php", <<<END
<?php

namespace App\Services;

class $Service extends \Cajudev\Rest\Service
{
}     
END);
}

function validator(string $Validator)
{
    save("src/Validator/{$Validator}.php", <<<END
<?php

namespace App\Validator;

use Doctrine\Common\Collections\ArrayCollection;

use Cajudev\Rest\Annotations\Validations;
use Cajudev\Rest\Exceptions\Http\BadRequestException;

class $Validator extends \Cajudev\Rest\Validator
{
    /**
     * @Validations\Strings(maxlength=255, required=true)
     */
    public string \$foo;

    public function validateFoo()
    {
        throw new BadRequestException('Foo invalid');
    }
}
END);
}

function directories(string $name)
{
    mkdir($name);
    chdir($name);
    mkdir(separator('public'), 0777, true);
    mkdir(separator('src/Entity'), 0777, true);
    mkdir(separator('src/Repository'), 0777, true);
    mkdir(separator('src/Services'), 0777, true);
    mkdir(separator('src/Validator'), 0777, true);
    mkdir(separator('src/Migrations'), 0777, true);
}

function index()
{
    save('public/index.php', <<<END
<?php

/**
 * -----------------------------------------------------------------------------
 * Require Main Configuration
 * -----------------------------------------------------------------------------
 */
require_once __DIR__ . '/../bootstrap.php';

/**
 * -----------------------------------------------------------------------------
 * Initialize Application
 * -----------------------------------------------------------------------------
 */

\$app = \Cajudev\Rest\App::create();

/**
 * -----------------------------------------------------------------------------
 * Create Routes
 * -----------------------------------------------------------------------------
 *
 *  GET     /{endpoint}
 *  GET     /{endpoint}/{id}
 *  POST    /{endpoint}
 *  PUT     /{endpoint}/{id}
 *  DELETE  /{endpoint}/{id}
 */

\$app->crud('endpoint', new \App\Services\Service());

/**
 * -----------------------------------------------------------------------------
 * Run Application
 * -----------------------------------------------------------------------------
 */

\$app->run();
END);
}

function bootstrap()
{
    save('bootstrap.php', <<<END
<?php

/**
 * -----------------------------------------------------------------------------
 * Require Composer Autoloader
 * -----------------------------------------------------------------------------
 */
require_once __DIR__ . '/vendor/autoload.php';

/**
 * -----------------------------------------------------------------------------
 * Register Doctrine Loader
 * -----------------------------------------------------------------------------
 */
\Doctrine\Common\Annotations\AnnotationRegistry::registerLoader('class_exists');

/**
 * -----------------------------------------------------------------------------
 * Define Environment Constants
 * -----------------------------------------------------------------------------
 */
define('__ROOT__', __DIR__);

define('__DEV__', true);
END);
}

function router()
{
    save('router.php', <<<END
<?php

/**
 * -----------------------------------------------------------------------------
 * Display All Errors
 * -----------------------------------------------------------------------------
 */
ini_set('display_startup_errors', 1);
ini_set('display_errors', 1);
error_reporting(-1);

/**
 * -----------------------------------------------------------------------------
 * Start Application 
 * -----------------------------------------------------------------------------
 */
require_once __DIR__ . '/public/index.php';
END);
}

function config()
{
    save('config.json', <<<END
{
    "database": {
        "driver": "pdo_mysql",
        "host": "",
        "dbname": "",
        "user": "",
        "password": "",
        "charset": "utf8"
    }
}      
END);
}

function doctrine()
{
    save('cli-config.php', <<<END
<?php

/**
 * -----------------------------------------------------------------------------
 * Require Main Configuration
 * -----------------------------------------------------------------------------
 */
require_once __DIR__ . '/bootstrap.php';

/**
 * -----------------------------------------------------------------------------
 * Initialize Doctrine Manager
 * -----------------------------------------------------------------------------
 */
\$em = \Cajudev\Rest\EntityManager::getInstance();

/**
 * -----------------------------------------------------------------------------
 * Returns CLI Helper
 * -----------------------------------------------------------------------------
 */
return \Doctrine\ORM\Tools\Console\ConsoleRunner::createHelperSet(\$em);
END);

    save('migrations.json', <<<END
{
  "migrations_namespace": "App\\Migrations",
  "migrations_directory": "src/Migrations"
}
END);
}

function composer()
{
    save('composer.json', <<<END
{
    "autoload": {
        "psr-4": {
        "App\\\\": "src/"
        }
    },
    "require": {
        "cajudev/restful-api": "*"
    }
}
END);
    execute('composer install');
}

function gitignore()
{
    save('.gitignore', <<<END
.vscode
/vendor/
END);
}

function start()
{
    execute('php -S localhost:8000 router.php');
};

function init($name)
{
    directories($name);
    index();
    bootstrap();
    router();
    config();
    doctrine();
    composer();
    gitignore();
    
    echo 'done';
};


function create($name)
{
    $name = ucfirst(strtolower($name));

    entity($name);
    repository($name);
    service($name);
    validator($name);

    echo 'done';
};

function remove($name)
{
    $Name = ucfirst(strtolower($name));
    array_map('unlink', glob(separator("src/**/{$Name}.php")));
    echo 'done';
};

function migrate() {
    execute('vendor/bin/doctrine-migrations migrations:diff');
    execute('vendor/bin/doctrine-migrations migrations:migrate --no-interaction');
}

function destroy() {
    execute('vendor/bin/doctrine orm:schema-tool:drop --force --full-database');
}

switch ($command[0]) {
    case 'start': start(); break;
    case 'init': init($command[1]); break;
    case 'create': create($command[1]); break;
    case 'remove': remove($command[1]); break;
    case 'migrate': migrate(); break;
    case 'destroy': destroy(); break;
    default: echo 'Invalid command. Available commands are: init, create and remove';
}
